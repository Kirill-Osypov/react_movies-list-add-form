{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","titleError","imdbIdError","imgUrlError","imdbUrlError","static","propTypes","onAdd","PropTypes","func","isRequired","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","pattern","RegExp","test","newFilm","props","this","onSubmit","type","onChange","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"iyEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,2BCrBGK,G,MAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRG,WAAY,GACZC,YAAa,GACbC,YAAa,GACbC,aAAc,IAVlB,EAaEC,OAAS,CACPC,UAAW,CACTC,MAAOC,IAAUC,KAAKC,aAf5B,EAmBEC,aAAe,SAACC,GAAO,IAAD,EACpB,EAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKC,UAAL,mBACGF,EAAOC,GADV,2BAEc,IAFd,4BAGe,IAHf,4BAIe,IAJf,6BAKgB,IALhB,KAtBJ,EA+BEE,aAAe,SAACL,GACdA,EAAEM,iBAEF,MAMI,EAAKlB,MALPhB,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAW,EALF,EAKEA,OAIIqB,EAAU,IAAIC,OAAO,sKAE3B,QAAQ,GACN,KAAMpC,EAGJ,YAFA,EAAKgC,SAAS,CAAEf,WAAY,2HAI9B,KAAMkB,EAAQE,KAAKnC,GAGjB,YAFA,EAAK8B,SAAS,CAAEb,YAAa,gBAI/B,KAAMgB,EAAQE,KAAKlC,GAGjB,YAFA,EAAK6B,SAAS,CAAEZ,aAAc,gBAIhC,KAAMN,EAGJ,YAFA,EAAKkB,SAAS,CAAEd,YAAa,2HAQjC,IAAMoB,EAAU,CACdtC,QACAC,cACAC,SACAC,UACAW,UAGF,EAAKyB,MAAMhB,MAAMe,GAEjB,EAAKN,SAAS,CACZhC,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,MArFd,4CAyFE,WACE,MAUI0B,KAAKxB,MATPhB,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAW,EALF,EAKEA,OACAG,EANF,EAMEA,WACAC,EAPF,EAOEA,YACAC,EARF,EAQEA,YACAC,EATF,EASEA,aAGF,OACE,0BAAMqB,SAAUD,KAAKP,cACnB,yBAAK7B,UAAS,eAAWa,EAAkB,SAAL,KAAtC,aAEE,2BACEyB,KAAK,OACLZ,KAAK,QACLC,MAAO/B,EACP2C,SAAUH,KAAKb,gBAGnB,8BAAOV,GAEP,yBAAKb,UAAU,SAAf,mBAEE,8BACE0B,KAAK,cACLC,MAAO9B,EACP0C,SAAUH,KAAKb,gBAInB,yBAAKvB,UAAS,eAAWe,EAAmB,SAAL,KAAvC,cAEE,2BACEuB,KAAK,OACLZ,KAAK,SACLC,MAAO7B,EACPyC,SAAUH,KAAKb,gBAGnB,8BAAOR,GAEP,yBAAKf,UAAS,eAAWgB,EAAoB,SAAL,KAAxC,eAEE,2BACEsB,KAAK,OACLZ,KAAK,UACLC,MAAO5B,EACPwC,SAAUH,KAAKb,gBAGnB,8BAAOP,GAEP,yBAAKhB,UAAS,eAAWc,EAAmB,SAAL,KAAvC,cAEE,2BACEwB,KAAK,OACLZ,KAAK,SACLC,MAAOjB,EACP6B,SAAUH,KAAKb,gBAGnB,8BAAOT,GAEP,4BACEwB,KAAK,SACLtC,UAAU,aACVwC,WACI3B,KACGE,KACAC,KACAF,GAPT,YA7JR,GAA8B2B,c,OCCjBC,EAAb,4MACE9B,MAAQ,CACNN,OAAQqC,GAFZ,EAKEC,SAAW,SAACpC,GACV,EAAKoB,UAAS,SAAAhB,GAAK,MAAK,CACtBN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,CAAoBE,SAPhC,4CAWE,WACE,IAAQF,EAAW8B,KAAKxB,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CACEmB,MAAOiB,KAAKQ,iBArBxB,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cf4790f6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleError: '',\n    imdbIdError: '',\n    imgUrlError: '',\n    imdbUrlError: '',\n  };\n\n  static = {\n    propTypes: {\n      onAdd: PropTypes.func.isRequired,\n    },\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n      titleError: '',\n      imdbIdError: '',\n      imgUrlError: '',\n      imdbUrlError: '',\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    // eslint-disable-next-line max-len\n    const pattern = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n    switch (true) {\n      case !title:\n        this.setState({ titleError: 'Что-то здесь пустовато!' });\n\n        return;\n\n      case !pattern.test(imgUrl):\n        this.setState({ imgUrlError: 'Invalid URL' });\n\n        return;\n\n      case !pattern.test(imdbUrl):\n        this.setState({ imdbUrlError: 'Invalid URL' });\n\n        return;\n\n      case !imdbId:\n        this.setState({ imdbIdError: 'Что-то здесь пустовато!' });\n\n        return;\n\n      default:\n        break;\n    }\n\n    const newFilm = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(newFilm);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      imdbIdError,\n      imgUrlError,\n      imdbUrlError,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className={`label${!titleError ? '' : ' error'}`}>\n          Title:&nbsp;\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleChange}\n          />\n        </div>\n        <span>{titleError}</span>\n\n        <div className=\"label\">\n          Description:&nbsp;\n          <textarea\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div className={`label${!imgUrlError ? '' : ' error'}`}>\n          ImgUrl:&nbsp;\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n          />\n        </div>\n        <span>{imgUrlError}</span>\n\n        <div className={`label${!imdbUrlError ? '' : ' error'}`}>\n          ImdbUrl:&nbsp;\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n          />\n        </div>\n        <span>{imdbUrlError}</span>\n\n        <div className={`label${!imdbIdError ? '' : ' error'}`}>\n          ImdbId:&nbsp;\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n          />\n        </div>\n        <span>{imdbIdError}</span>\n\n        <button\n          type=\"submit\"\n          className=\"add-button\"\n          disabled={\n            !!titleError\n            || !!imgUrlError\n            || !!imdbUrlError\n            || !!imdbIdError\n          }\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}